C51 COMPILER V9.56.0.0   MASTER_CODE                                                       10/10/2016 06:28:00 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MASTER_CODE
OBJECT MODULE PLACED IN ..\Objects\master_code.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE master_code.c BROWSE DEBUG OBJECTEXTEND OBJECT(..\Objects\master_code.ob
                    -j)

line level    source

   1          /* Explicação:
   2            - Configura I2C e RF
   3            - Caso btn1 seja apertado:
   4                    escreve um valor qlqr(0x102) no barramento i2c
   5            - Caso btn2 seja apertado:
   6                    le um valor e manda para o radio
   7            - No arduino:
   8                  - redireciona i2c received para serial0
   9                  - redireciona serial0 para i2c sending
  10          */
  11          #include "reg24le1.h" //registers address
  12          #include "stdint.h" //inteiros uint8_t, int8_t, uint16_t....
  13          #include "stdbool.h" //Booleanos
  14          #include "intrins.h"
  15          #include "API.h"
  16          
  17          /*************************LIBRARY********************/
  18          #define MASTER 0X02
  19          #define SLAVE  0x00
  20          
  21          #define READY (W2CON1&0X01)       //if ready ==1,not ready==0
  22          #define ACK   (W2CON1&0X02 )  //1;no ack and 0 ack
  23          #define EN2WIRE()  W2CON0|=0x01;//enable 2 wire
  24          #define DISABLE2WIRE()  W2CON0&=0xFE;
  25          #define STOP()    W2CON0|=0x20;
  26          #define START()   W2CON0|=0x10;
  27          #define FREQSEL(x)  W2CON0|=(x<<2);
  28          #define MODE(x)    W2CON0&=(0xff-0x02);W2CON0|=x;  //master or slave
  29          
  30          void I2C_init(void);
  31          uint8_t wire_read(uint8_t devAddr);
  32          bool wire_write(uint8_t devAddr, uint8_t value_to_write);
  33          #define arduino_endereco 0x68
  34          /***********************END-LIBRARY******************/
  35          
  36          /*************General********************/
  37          void delay_ms(unsigned int x);
  38          void luzes_iniciais(void);
  39          //Pushbuttons
  40          sbit S1  = P0^2;    // 1/0=no/press
  41          sbit S2  = P1^4;    // 1/0=no/press
  42          //LEDS
  43          sbit LED1 = P0^3; // 1/0=light/dark
  44          sbit LED2 = P0^6; // 1/0=light/dark
  45          
  46          void setup(void){
  47   1          // Set up GPIO
  48   1          P0DIR = 0xB7;   // 1011 0111 - 1/0 = In/Out - Output: P0.3 e P0.6
  49   1          P1DIR = 0xFF;   // Tudo input
  50   1          P2DIR = 0xFF;
  51   1          P0CON = 0x00;       // All general I/O
  52   1          P1CON = 0x00;       // All general I/O
  53   1          P2CON = 0x00;       // All general I/O
  54   1      
C51 COMPILER V9.56.0.0   MASTER_CODE                                                       10/10/2016 06:28:00 PAGE 2   

  55   1          //I2C
  56   1          I2C_init();
  57   1          //Finishing
  58   1          EA = 1;
  59   1          luzes_iniciais();
  60   1      }
  61          
  62          void main(void){
  63   1        setup();
  64   1        while(1){
  65   2          if(!S1){
  66   3            wire_write(arduino_endereco,0x102);
  67   3            delay_ms(100); //evita ruidos
  68   3                              while(!S1); //espera soltar o botao
  69   3                              delay_ms(100);
  70   3          }
  71   2          if(!S2){
  72   3            if(wire_read(arduino_endereco)==0x05){
  73   4              LED2 = !LED2;
  74   4            } else {
  75   4              LED1 = !LED1;
  76   4            }
  77   3            delay_ms(100); //evita ruidos
  78   3                              while(!S1); //espera soltar o botao
  79   3                              delay_ms(100);
  80   3          }
  81   2        }
  82   1      }
  83          /****************General*************************/
  84          void delay_ms(unsigned int x)
  85          {
  86   1          unsigned int i,j;
  87   1          i=0;
  88   1          for(i=0;i<x;i++)
  89   1          {
  90   2             j=508;
  91   2                 ;
  92   2             while(j--);
  93   2          }
  94   1      }
  95          void luzes_iniciais(void){
  96   1              LED1 = 1; LED2 = 0;
  97   1              delay_ms(1000);
  98   1              LED1 = 0; LED2 = 1;
  99   1              delay_ms(1000);
 100   1              LED1 = 1; LED2 = 1;
 101   1              delay_ms(1000);
 102   1              LED1 = 0; LED2 = 0;
 103   1      }
 104          /**************************************************/
 105          /***************WIRE LIBRARY*********************/
 106          void I2C_init(void){
 107   1          //original
 108   1          FREQSEL(0x02); //W2CON0|=(0x01<<2) Standart mode: 100KHz
 109   1          MODE(MASTER); //W2CON0&=(0xfd);W2CON0|=0x02;  //master or slave
 110   1          //NOTE: ja tentei trocar isso pro 0xDF e colocar um  &
 111   1          W2CON1|=0x20; //disable all interrupts
 112   1          W2SADR=0x00; //endere�o = 0x00
 113   1          EN2WIRE();  //W2CON0|=0x01;//enable 2 wire
 114   1      }
 115          uint8_t wire_read(uint8_t devAddr){
 116   1          uint8_t data_read;
C51 COMPILER V9.56.0.0   MASTER_CODE                                                       10/10/2016 06:28:00 PAGE 3   

 117   1          START();
 118   1          W2DAT=((devAddr)<<1)+1;//read from slave
 119   1          while(ACK);
 120   1          while(!READY){
 121   2            LED1 = 1;
 122   2          }
 123   1          LED1 = 0;
 124   1          data_read=W2DAT;
 125   1          STOP();
 126   1          return data_read;
 127   1      }
 128          bool wire_write(uint8_t devAddr,uint8_t value_to_write){
 129   1          bool ack_received;
 130   1          START(); //W2CON0|=0x10;
 131   1          W2DAT=((devAddr)<<1)+0;//write
 132   1          if(!ACK){ //IF ACK
 133   2              W2DAT=value_to_write;
 134   2          }
 135   1          ack_received = !ACK;
 136   1          STOP();     //W2CON0|=0x20;
 137   1          return ack_received;
 138   1      }
 139          /***************END - WIRE LIBRARY*********************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
