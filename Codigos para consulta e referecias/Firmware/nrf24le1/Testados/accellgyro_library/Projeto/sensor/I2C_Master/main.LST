C51 COMPILER V9.05   MAIN                                                                  09/04/2012 12:53:32 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE INCDIR(..\..\..\nRFgo SDK 2.3.0.10040\source_code\compiler\co
                    -mmon;..\..\..\nRFgo SDK 2.3.0.10040\source_code\hal;..\..\..\nRFgo SDK 2.3.0.10040\source_code\hal\nrf24le1;..\..\..\nRF
                    -go SDK 2.3.0.10040\source_code\lib;..\hal;..\hal\nrf24le1) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /***********************************************/
   2          /* I2C Master example code
   3          /* Send 100 indentical bytes
   4          /* Read back 100 bytes
   5          /* Verify if they are increased by 1
   6          /************************************************/
   7          
   8          #include "nrf24le1.h"
   9          #include <hal_w2_isr.h>
  10          #include "hal_delay.h"
  11          uint8_t hal_w2_wait_data_ready_ISR(void);
  12          uint8_t flag =0;
  13            uint8_t w2_status; 
  14            bool data_ready;
  15          void delay_timer0(void);
  16          
  17          void main()
  18          {
  19   1        uint8_t i;
  20   1        xdata uint8_t data_string[100];
  21   1        //Indicate startup process by flashing the LED1 
  22   1      
  23   1      //*************************** Init GPIO Pins  
  24   1        P0DIR = 0x00;
  25   1        P1DIR = 0xFF;
  26   1        P2DIR = 0xFF;
  27   1        P3DIR = 0xFF;
  28   1      //*************************** Init I2C
  29   1        hal_w2_configure_master(HAL_W2_400KHZ);
  30   1        data_string[0]=0;
  31   1        EA= 1;
  32   1        i=0;
  33   1        
  34   1        while(1)  
  35   1        {
  36   2        
  37   2          //store data_string[0] for verification.
  38   2          flag=data_string[0];
  39   2          //Sending 100 indentical bytes to slave 
  40   2          //P0=0xFF;
  41   2          hal_w2_write(0x07, data_string, 100);
  42   2          //Reading 100 byte from slave (after increased value by 1 on the slave)
  43   2          //P0=0xAA;
  44   2          hal_w2_read(0x07,data_string,100);
  45   2          
  46   2          P0=data_string[0]; //Output the byte (optional)
  47   2        
  48   2          //Verification
  49   2          flag++;
  50   2          for (i=0;i<99; i++) 
  51   2          if (data_string[i]!=flag)//not matched
  52   2          {
  53   3            P0=0xAA;while(1); 
C51 COMPILER V9.05   MAIN                                                                  09/04/2012 12:53:32 PAGE 2   

  54   3          }
  55   2        }
  56   1      }
  57          
  58          
  59          uint8_t hal_w2_wait_data_ready_ISR(void)
  60          {
  61   1      data_ready=0;
  62   1      while (!data_ready);
  63   1      return w2_status;
  64   1      }
  65          void I2C_IRQ (void) interrupt INTERRUPT_SERIAL
  66          {
  67   1      
  68   1        w2_status = W2CON1;
  69   1        data_ready = (w2_status & W2CON1_FLAG_DATA_READY);
  70   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    118    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----     100
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
